/*
 * This file is part of the Charly Virtual Machine (https://github.com/KCreate/charly-vm)
 *
 * MIT License
 *
 * Copyright (c) 2017 - 2020 Leonard Sch√ºtz
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

DEFINE_INTERNAL_METHOD("charly.stdlib.time.system_clock_now", Time::system_clock_now, 0, ThreadPolicyMain),
DEFINE_INTERNAL_METHOD("charly.stdlib.time.steady_clock_now", Time::steady_clock_now, 0, ThreadPolicyMain),
DEFINE_INTERNAL_METHOD("charly.stdlib.time.highres_now",      Time::highres_now,      0, ThreadPolicyMain),
DEFINE_INTERNAL_METHOD("charly.stdlib.time.to_local",         Time::to_local,         1, ThreadPolicyMain),
DEFINE_INTERNAL_METHOD("charly.stdlib.time.to_utc",           Time::to_utc,           1, ThreadPolicyMain),
DEFINE_INTERNAL_METHOD("charly.stdlib.time.fmt",              Time::fmt,              2, ThreadPolicyMain),
DEFINE_INTERNAL_METHOD("charly.stdlib.time.fmtutc",           Time::fmtutc,           2, ThreadPolicyMain),
DEFINE_INTERNAL_METHOD("charly.stdlib.time.parse",            Time::parse,            2, ThreadPolicyMain),
